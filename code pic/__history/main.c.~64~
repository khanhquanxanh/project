#include <main.h>
char querystring[200];
float temperature=0,doValue=0,phValue=0,tdsValue=60,turb=0,ecVolt=0,AnalogAverage=0;
//int1 enSim=0;
//int8 simCount;
float  buf[20];
float avgValue, tempph;
float readPh();
void batsim808();
void erase_buffer_sim();
void time(char *expected_answer,unsigned int16 time1);
float readturb();
void readSensor();
void readTds();
//int1 sendATcommand(char *command, char *expected_answer,unsigned int16 mstimeout);
void sendData();
float doArray[]={14.60,14.20,13.81,13.45,13.09,12.76,12.44,12.13,11.83,11.55,11.28,11.02,10.77,10.53,10.29,10.07,9.86,
9.65,9.45,9.26,9.08,8.90,8.73,8.56,8.40,8.24,8.09,7.95,7.81,7.67,7.54,7.41,7.29,7.17,7.05,6.93,6.82,6.72,6.61,6.51,6.41};
int8 buff_index=0;
const unsigned int8 buffer_size =100;
char c,buffer[buffer_size];
unsigned int16 sendCount=0;
int8 simCount, biendem=0;
int1 enSim;
const int8 sendDataTime=1000,numReadings = 20;
unsigned int16 readings[numReadings],AnalogValueTotal=0;
unsigned int index=0; 
float wartemp[20], buf[20];
float avgValue, tempph;
#INT_TIMER1                                 // Timer1 interrupt ISR
void timer1_isr()
{
   set_timer1(5536); //1/(48M/16)x60000
   
      sendCount++;
   if (enSim) simCount++;
}
#INT_RDA
void RDA_isr()
{
   c=fgetc(UARTSIM);
   buffer[buff_index]=c;
   fprintf(UART1,"%c",c);
   buff_index++;
}
void main()
{
   setup_adc(ADC_CLOCK_INTERNAL);
   setup_adc_ports(AN0_TO_AN4);
   setup_timer_1(T1_INTERNAL | T1_DIV_BY_4);
   enable_interrupts(INT_RDA);
   set_timer1(5536);
   enable_interrupts(INT_TIMER1); 
   enable_interrupts(GLOBAL);
   batsim808();
   fprintf(UART1,"Setup Successful\n");
   
   //delay_ms(1000);
   while(TRUE)
   {
        
       readSensor();
       
       fprintf(UART1,"TEMP: %2.2f\r\n",temperature);
       
       fprintf(UART1,"DO: %2.1f\r\n",doValue);
       
       fprintf(UART1,"pH: %2.1f\r\n",phValue);
       
       fprintf(UART1,"TURB (percent): %f\r\n", turb);
       
       fprintf(UART1,"TDS: %3.2f\r\n",tdsValue);
       delay_ms(2000);
       if (sendCount>=sendDataTime) 
       {
         sendCount=0;                 
         sendData();
         
       }
        
       //delay_ms(2000);
   }
}
void readSensor(void)
{
   temperature = ds1820_read(); 
   int doConvert= (int)temperature;
       doValue = doArray[doConvert];
   phValue=readPh();
   turb= readTurb();
   readTds();
}
float readPh()
   {
      set_adc_channel(3);
      delay_us(20);
      for (int s = 0; s < 10; s++)
      {
         buf[s] = read_adc();
         delay_ms(10);
      }
      for (int i = 0; i < 9; i++)
      {
         for (int j = i + 1; j < 10; j++)
         {
            if (buf[i] > buf[j])
            {
               tempph = buf[i];
               buf[i] = buf[j];
               buf[j] = tempph;
            }
         }
      }
  avgValue = 0;
  for (int a = 2; a < 8; a++)
      avgValue += buf[i];
      float pHVol = (float)avgValue * 5.0 / 1024 / 6;
      float phValue1 = -5.70 * pHVol + 21.34;
      return phValue1;
}
float readTurb()
{
   int16 turbVolt=0;
   set_adc_channel(1);
   delay_us(20);
   turbVolt=read_adc();
   return (float) turbVolt/1023*100;
}
void readTds()
{
      int16 sampleTDS=0;
  
      set_adc_channel(0);
      delay_us(20);
      int16 temp = read_adc();   
      //if (temp<1025)
      ecVolt = (float) temp/1023*5;
      //fprintf(UART1,"ok %li\r\n",k);      
      AnalogValueTotal = AnalogValueTotal - readings[index];
      readings[index] = temp;
      AnalogValueTotal = AnalogValueTotal + readings[index];
      index++;
      //fprintf(UART1,"AnalogAverage: %f, index: %d\r\n",AnalogAverage,index);
      if (index >= numReadings) index = 0;
      AnalogAverage = ((float) (AnalogValueTotal) / (1023*numReadings))*5;
      sampleTDS=(AnalogAverage*1000)/(1+0.0185*(temperature-25.0)); //mV/C
      if (sampleTDS<315)
      {
      if (sampleTDS<70) tdsValue=0;
      else if (sampleTDS>3300) tdsValue=1995; 
         else if (sampleTDS<150) tdsValue=2.375*sampleTDS;
            else if (sampleTDS<180) tdsValue=2.75*sampleTDS;
                 else if (sampleTDS<210) tdsValue=2.95*sampleTDS;
                    else if (sampleTDS<220) tdsValue=3.1*sampleTDS;
                         else if (sampleTDS<230) tdsValue=3.4*sampleTDS;
                              else if (sampleTDS<240) tdsValue=3.67*sampleTDS;
                                   else if (sampleTDS<250) tdsValue=3.95*sampleTDS;
                                        else if (sampleTDS<260) tdsValue=4.46*sampleTDS;
                                             else if (sampleTDS<265) tdsValue=4.85*sampleTDS;
                                                 else if (sampleTDS<270) tdsValue=5.06*sampleTDS;   
                                                      else if (sampleTDS<275) tdsValue=5.26*sampleTDS;
                                                           else if (sampleTDS<285) tdsValue=5.45*sampleTDS;
                                                                else if (sampleTDS<290) tdsValue=5.65*sampleTDS; 
                                                                     else if (sampleTDS<295) tdsValue=5.95*sampleTDS;   
                                                                          else if (sampleTDS<300) tdsValue=6.35*sampleTDS;
                                                                               else if (sampleTDS<305) tdsValue=6.55*sampleTDS;
                                                                                    else if (sampleTDS<310) tdsValue=6.65*sampleTDS; 
                                                                                         else if (sampleTDS<315) tdsValue=6.75*sampleTDS; //3900ppm
      }      
      else tdsValue=(6.75+(sampleTDS-310)/23.02)*sampleTDS; //hang so 23.02 tinh tu moc 3900ppm tai 310mv <=> kconst 6.75;
      //moc tren 8700ppm tai 403mv <=> kconst=10.2;
      tdsValue= tdsValue*2;
}
void erase_buffer_sim()
{
   //xoa bo nho dem (dung de doc phan hoi sim trong ngat)
   int i;
   for(i=0;i<buffer_size;i++){ buffer[i]=0x00;}
   //buff_index=0x00;
   return;
}
/*int1 sendATcommand(char *command, char *expected_answer,unsigned int16 mstimeout)
{
   //gui lenh cho sim co timeout
   int1 answerAT=0;
   buff_index=0;
   erase_buffer_sim();
   //delay_ms(1000);//Delay to be sure no passed commands interfere
   fprintf(UARTSIM,command);
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(500); //delay doi phan hoi 
   enSim=1;
   do
   {
      if(strstr(buffer,expected_answer)!=NULL)
      {
         answerAT=1;
      }
      else answerAT=0;
   } while((answerAT==0)&&(simCount<mstimeout));
   enSim=0;
   simCount=0;
   return answerAT;
}*/

void batsim808()
{
   //Khoi dong Sim
   //Cho Module sim khoi dong,tam 15000ms
   delay_ms(5000);
   fprintf(UART1,"Bat MODULE SIM:\n"); 
   fprintf(UART1,"Tat phan hoi sim: \n");
   fprintf(UARTSIM,"ATE0"); //ATE1: bat ATE0:tat phan hoi module sim
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(1000);
   erase_buffer_sim();
   fprintf(UART1,"Kiem Tra Module Sim:\n"); 
   fprintf(UARTSIM,"AT");
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(1000);
   //time("OK",50);
   
//!   fprintf(UART1,"Set BAUD");
//!   sendATcommand("AT+IPR=9600","OK",50);
   //fprintf(UART1,"Cau hinh SMS:");
   //sendATcommand("AT+CMGF=1","OK",50);
   erase_buffer_sim();
   fprintf(UART1,"Cau hinh SMS:");
   fprintf(UARTSIM,"AT+CMGF=1");
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(2000);
   
   erase_buffer_sim();
   fprintf(UART1,"CAU HINH GPRS\n");
   fprintf(UARTSIM,"AT+SAPBR=3,1,\"Contype\",\"GPRS\"");
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(2000);
   //time("OK",100);
   erase_buffer_sim();
   //cau hinh gprs
   fprintf(UART1,"CAU HINH APN\n");
   fprintf(UARTSIM,"AT+SAPBR=3,1,\"APN\",\"wap\"");
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(2000);
   //time("OK",100);
   //fprintf("AT+SAPBR=3,1,\"APN\",\"wap\""); //cau hinh apn cho mang vietnammobile
   //int answer=0;
   //answer=sendATcommand("AT+HTTPINIT","OK",150);
   //if(answer==1)
   //{
     // fprintf(UART1,"HTTP PARA CID");
     // answer=sendATcommand("AT+HTTPPARA=\"CID\",1","OK",500);
   //}   
}
void sendData() //t tds ph do turb
{
   erase_buffer_sim();
   fprintf(UART1,"\r\nSEND DATA\r\n");
   fprintf(UART1,"BAT GPRS\n");
   fprintf(UARTSIM,"AT+SAPBR=1,1");
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(2000);
   //time("OK",350);
   erase_buffer_sim();
   
   fprintf(UART1,"KHOI TAO HTML\n");
   fprintf(UARTSIM,"AT+HTTPINIT");
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(2000);
   //time("OK",150);
   
   erase_buffer_sim();
   
   fprintf(UART1,"SEND URL: ");
   sprintf(querystring,"AT+HTTPPARA=\"URL\",\"watervvv.000webhostapp.com/update_data.php?t=%2.1f&tds=%2.1f&do=%2.1f&ph=%2.1f&turb=%2.1f\""
   ,temperature,tdsValue,doValue,phValue,turb); 
   fprintf(UART1,querystring);
   fprintf(UARTSIM,querystring);
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(2000);
   //time("OK",250);
   
   
   erase_buffer_sim();
   //delay_ms(2000);
   fprintf(UART1,"KHOI TAO CID \n");
   fprintf(UARTSIM,"AT+HTTPPARA=\"CID\",1");
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(5000);
   //time("OK",500);
   
   
   erase_buffer_sim();
   //delay_ms(2000);
   fprintf(UART1,"BAT DAU THUC HIEN HTHL \n");
   fprintf(UARTSIM,"AT+HTTPACTION=0");
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(5000);
   //time("+HTTPACTION: 0,200",250);
   
  
   erase_buffer_sim();
   //delay_ms(2000);
   fprintf(UART1,"TAT GPRS\n");
   fprintf(UARTSIM,"AT+SAPBR=0,1");
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(2000);
   //time("OK",350);
   
   //erase_buffer_sim();
   //delay_ms(2000);
  /* sendATcommand("AT+SAPBR=1,1","OK",350); // bat sim
   delay_us(20);
   sendATcommand("AT+HTTPINIT","OK",150);// khoi tao http
   
   fprintf(UART1,"SEND URL: ");
   sprintf(querystring,"AT+HTTPPARA=\"URL\",\"watervvv.000webhostapp.com/update_data.php?t=%2.1f&tds=%2.1f&do=%2.1f&ph=%2.1f&turb=%2.1f\""
   ,temperature,tdsValue,doValue,phValue,turb);   
   fprintf(UART1,querystring);
   sendATcommand(querystring,"OK",250);
   sendATcommand("AT+HTTPPARA=\"CID\",1","OK",500);//???
   fprintf(UART1,"HTTP ACTION");
   sendATcommand("AT+HTTPACTION=0","+HTTPACTION: 0,200",250);// start http
   
   fprintf(UART1,"TAT GPRS");
   sendATcommand("AT+SAPBR=0,1","OK",250); // xong thi tat gprs*/

}
void time(char *expected_answer,unsigned int16 time1)
{
  erase_buffer_sim();
  int1 answerAT=0;
  enSim=1;
  do
   {
      if(strstr(buffer,expected_answer)!=NULL)
      {
         answerAT=1;
      }
      else answerAT=0;
   } while((answerAT==0)&&(simCount<time1));
   enSim=0;
   simCount=0;
   
}
void warning()
{
if ((temperature > 40) && (biendem==0))
{
   //i=1;
   for(int j=0;j<10;j++)
      {
         readSensor();
         wartemp[j]=temperature;
         delay_ms(1000);
      }
   int m=0;
   while((wartemp[m]>=40)&&(m<10))
      {
         m++;
      }
   //kiem tr neu 10 lan deu vuot nguong thi mowi canh bao sms
   if (m==11)
   {
   sendSMS("Warning level 2");
   biendem=1;
   }
}
if (temperature<=40)
biendem=0;
}
int1 sendSMS(char *s)
{
//!   disable_interrupts(GLOBAL);
//!   eeprom_read_string(0x00,phone,11);   
//!   enable_interrupts(GLOBAL);
//!   if ((phone[10]<48)||(phone[10]>127)) 
//!   {
//!      phone[10]=0x22;   //"\""
//!      phone[11]=0x00;   // nul
//!   }
//!   else phone[11]=0x22; //"\""
   int1 answer=0;
   char ch[25]="";
   phone = "0343366305\"";
   //fprintf(UART1,"PHONE: %s\r\n",phone);
   strcat(ch,"AT+CMGS=\"");
   strcat(ch, phone);
   fprintf(UART1,"chuoi gui tin: %s\r\n",ch);
   fprintf(UARTSIM,ch);
   fputc(13,UARTSIM);
   fputc(10,UARTSIM);
   delay_ms(4000);
   
   fprintf(UARTSIM,"%s",s);
   fputc(26,UARTSIM);
  
}

